/* eslint-disable */
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

declare module "graphql-tag" {

  export function gql(source: "\n  query GalleryDirList($offset: Int, $limit: Int) {\n    galerie_dir(limit: $limit, offset: $offset, order_by: {gd_name: asc}) {\n      ...galleryDirFields\n    }\n    aggregate: galerie_dir_aggregate {\n      aggregate {\n        count\n      }\n    }\n  }\n"): typeof import('./graphql').GalleryDirListDocument;
  export function gql(source: "\n  mutation setGalerieDirVisible($id: bigint!, $visible: Boolean!) {\n    update_galerie_dir_by_pk(pk_columns: {gd_id: $id}, _set: {gd_hidden: $visible}) {\n      gd_id\n    }\n  }\n"): typeof import('./graphql').SetGalerieDirVisibleDocument;
  export function gql(source: "\nfragment galleryDirFields on galerie_dir {\n  gd_hidden\n  gd_id\n  gd_id_rodic\n  gd_level\n  gd_name\n  gd_path\n}"): typeof import('./graphql').GalleryDirFieldsFragmentDoc;
  export function gql(source: "\nfragment scheduleFields on rozpis {\n  r_datum\n  r_id\n  r_kde\n  r_lock\n  r_timestamp\n  r_trener\n  r_visible\n  user {\n    u_jmeno\n    u_prijmeni\n    u_id\n  }\n}"): typeof import('./graphql').ScheduleFieldsFragmentDoc;
  export function gql(source: "\nfragment scheduleItemFields on rozpis {\n  rozpis_items {\n    ri_od\n    ri_do\n    ri_id\n    ri_partner\n  }\n}"): typeof import('./graphql').ScheduleItemFieldsFragmentDoc;
  export function gql(source: "\nfragment reservationFields on nabidka {\n  n_visible\n  n_trener\n  n_timestamp\n  n_pocet_hod\n  n_od\n  n_max_pocet_hod\n  n_lock\n  n_id\n  n_do\n  user {\n    u_jmeno\n    u_prijmeni\n    u_id\n  }\n}"): typeof import('./graphql').ReservationFieldsFragmentDoc;
  export function gql(source: "\nfragment reservationItemFields on nabidka {\n  nabidka_items {\n    ni_lock\n    ni_partner\n    ni_pocet_hod\n    pary {\n      user {\n        u_id\n        u_jmeno\n        u_prijmeni\n      }\n    }\n  }\n}"): typeof import('./graphql').ReservationItemFieldsFragmentDoc;
  export function gql(source: "\nfragment eventFields on akce {\n  a_do\n  a_id\n  a_info\n  a_dokumenty\n  a_jmeno\n  a_kapacita\n  a_kde\n  a_lock\n  a_od\n  a_timestamp\n  a_visible\n}"): typeof import('./graphql').EventFieldsFragmentDoc;
  export function gql(source: "\nfragment eventItemFields on akce {\n  akce_items {\n    ai_id\n    user {\n      u_jmeno\n      u_prijmeni\n      u_id\n    }\n  }\n}"): typeof import('./graphql').EventItemFieldsFragmentDoc;
  export function gql(source: "\nfragment announcementFields on upozorneni {\n  up_id\n  up_kdo\n  up_lock\n  up_nadpis\n  up_text\n  up_timestamp\n  up_timestamp_add\n  user {\n    u_id\n    u_jmeno\n    u_prijmeni\n  }\n  upozorneni_skupinies {\n    skupiny {\n      s_name\n      s_description\n      s_color_text\n      s_color_rgb\n    }\n  }\n}"): typeof import('./graphql').AnnouncementFieldsFragmentDoc;
  export function gql(source: "\nquery UpozorneniList($offset: Int, $limit: Int) {\n  upozorneni(limit: $limit, offset: $offset, order_by: {up_timestamp_add: desc}) {\n    ...announcementFields\n  }\n  aggregate: upozorneni_aggregate {\n    aggregate {\n      count\n    }\n  }\n}"): typeof import('./graphql').UpozorneniListDocument;
  export function gql(source: "\nquery ArticlesAdminList($offset: Int, $limit: Int) {\n  aktuality: aktuality_admin(limit: $limit, offset: $offset, order_by: {at_timestamp_add: desc}) {\n    at_foto\n    at_foto_main\n    at_id\n    at_jmeno\n    at_kat\n    at_kdo\n    at_preview\n    at_text\n    at_timestamp_add\n    at_timestamp\n  }\n  aggregate: aktuality_admin_aggregate {\n    aggregate {\n      count\n    }\n  }\n}"): typeof import('./graphql').ArticlesAdminListDocument;
  export function gql(source: "\nquery NabidkaList($offset: Int, $limit: Int) {\n  nabidka(limit: $limit, offset: $offset) {\n    ...reservationFields\n  }\n}"): typeof import('./graphql').NabidkaListDocument;
  export function gql(source: "\nquery AkceList($offset: Int, $limit: Int) {\n  akce(limit: $limit, offset: $offset, order_by: {a_od: desc}) {\n    ...eventFields\n    aggregate: akce_items_aggregate {\n      aggregate {\n        count\n      }\n    }\n  }\n  aggregate: akce_aggregate {\n    aggregate {\n      count\n    }\n  }\n}"): typeof import('./graphql').AkceListDocument;
  export function gql(source: "\nquery Akce($id: bigint!) {\n  akce_by_pk(a_id: $id) {\n    ...eventFields\n    ...eventItemFields\n  }\n}"): typeof import('./graphql').AkceDocument;
  export function gql(source: "\n  query Rozpis($id: bigint!) {\n    rozpis_by_pk(r_id: $id) {\n      ...scheduleFields\n      ...scheduleItemFields\n    }\n  }\n"): typeof import('./graphql').RozpisDocument;
  export function gql(source: "\n  query Nabidka($id: bigint!) {\n    nabidka_by_pk(n_id: $id) {\n      ...reservationFields\n      ...reservationItemFields\n    }\n  }\n"): typeof import('./graphql').NabidkaDocument;
  export function gql(source: "\n  mutation setRozpisVisible($id: bigint!, $visible: Boolean!) {\n    update_rozpis_by_pk(pk_columns: {r_id: $id}, _set: {r_visible: $visible}) {\n      r_id\n    }\n  }\n"): typeof import('./graphql').SetRozpisVisibleDocument;
  export function gql(source: "\n  mutation setNabidkaVisible($id: bigint!, $visible: Boolean!) {\n    update_nabidka_by_pk(pk_columns: {n_id: $id}, _set: {n_visible: $visible}) {\n      n_id\n    }\n  }\n"): typeof import('./graphql').SetNabidkaVisibleDocument;
  export function gql(source: string): unknown;

    export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<    infer TType,    any  >    ? TType    : never;  
}