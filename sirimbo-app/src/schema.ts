/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/wp/v2/types": {
    get: {
      responses: {
        200: {
          content: {
            "application/json;charset=utf-8": { [key: string]: any };
          };
        };
      };
    };
  };
  "/wp/v2/taxonomies": {
    get: {
      responses: {
        200: {
          content: {
            "application/json;charset=utf-8": { [key: string]: any };
          };
        };
      };
    };
  };
  "/api/qr-payment.png": {
    get: {
      parameters: {
        query: {
          acc?: string;
          am?: string;
          msg?: string;
          ss?: string;
          vs?: string;
          ks?: string;
        };
      };
      responses: {
        200: {
          content: {
            "image/png": components["schemas"]["Image"];
          };
        };
        /** Invalid `ks` or `vs` or `ss` or `msg` or `am` or `acc` */
        400: unknown;
      };
    };
  };
  "/wp/v2/pages/{page}": {
    get: {
      parameters: {
        path: {
          page: number;
        };
      };
      responses: {
        200: {
          content: {
            "application/json;charset=utf-8": { [key: string]: any };
          };
        };
        /** `page` not found */
        404: unknown;
      };
    };
  };
  "/wp/v2/themes": {
    get: {
      responses: {
        200: {
          content: {
            "application/json;charset=utf-8": { [key: string]: any };
          };
        };
      };
    };
  };
  "/api/reservation/{id}": {
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        200: {
          content: {
            "application/json;charset=utf-8": components["schemas"]["ReservationResponse"];
          };
        };
        /** `id` not found */
        404: unknown;
      };
    };
  };
  "/wp/v2/pages/{page}/autosaves": {
    get: {
      parameters: {
        path: {
          page: number;
        };
      };
      responses: {
        200: {
          content: {
            "application/json;charset=utf-8": { [key: string]: any }[];
          };
        };
        /** `page` not found */
        404: unknown;
      };
    };
  };
  "/api/whoami": {
    get: {
      responses: {
        200: {
          content: {
            "application/json;charset=utf-8": string;
            "text/plain;charset=utf-8": string;
          };
        };
      };
    };
  };
  "/logout": {
    get: {
      responses: {
        303: {
          headers: {
            Location?: string;
            "Set-Cookie"?: string;
          };
          content: {
            "application/json;charset=utf-8": unknown;
          };
        };
      };
    };
  };
  "/wp/v2/media": {
    options: {
      responses: {
        200: {
          headers: {
            Allow?: string;
          };
          content: {
            "application/json;charset=utf-8": { [key: string]: unknown }[];
          };
        };
      };
    };
  };
  "/api/export-emails": {
    get: {
      responses: {
        200: {
          content: {
            "text/csv;charset=utf-8": string[];
            "application/json;charset=utf-8": string[];
          };
        };
      };
    };
  };
  "/wp/v2/blocks": {
    get: {
      responses: {
        200: {
          content: {
            "application/json;charset=utf-8": { [key: string]: any }[];
          };
        };
      };
    };
    options: {
      responses: {
        200: {
          headers: {
            Allow?: string;
          };
          content: {
            "application/json;charset=utf-8": { [key: string]: unknown }[];
          };
        };
      };
    };
  };
  "/wp/v2/users": {
    get: {
      responses: {
        200: {
          content: {
            "application/json;charset=utf-8": { [key: string]: any };
          };
        };
      };
    };
  };
  "/wp/v2/types/{type}": {
    get: {
      parameters: {
        path: {
          type: string;
        };
      };
      responses: {
        200: {
          content: {
            "application/json;charset=utf-8": { [key: string]: any };
          };
        };
        /** `type` not found */
        404: unknown;
      };
    };
  };
  "/wp/v2/users/me": {
    get: {
      responses: {
        200: {
          content: {
            "application/json;charset=utf-8": { [key: string]: any };
          };
        };
      };
    };
  };
}

export interface components {
  schemas: {
    Image: string;
    Reservation: {
      reservationTrainer: components["schemas"]["Key"];
      reservationMaximumPerPair: number;
      reservationNumberLessons: number;
      reservationTo: components["schemas"]["Day"];
      reservationFrom: components["schemas"]["Day"];
      reservationVisible: string;
      reservationUpdatedAt: components["schemas"]["UTCTime"];
      reservationLock: string;
    };
    ReservationResponse: {
      trainer: components["schemas"]["User"];
      reservation: components["schemas"]["Reservation"];
      items: [string, number][];
    };
    User: {
      userPaymentGroup: components["schemas"]["Key"];
      userOrientationNumber: string;
      userSystem: string;
      userBan: string;
      userUserGroup: components["schemas"]["Key"];
      userConscriptionNumber: string;
      userDistrict: string;
      userSurname: string;
      userConfirmed: string;
      userNotes: string;
      userLogin: string;
      userTeacher: string;
      userStreet: string;
      userBirthDate: components["schemas"]["Day"];
      userPassword: string;
      userCity: string;
      userGender: string;
      userName: string;
      userUpdatedAt: components["schemas"]["UTCTime"];
      userPostalCode: string;
      userCreatedAt: components["schemas"]["UTCTime"];
      userLevel: number;
      userGdprSignedAt?: components["schemas"]["UTCTime"];
      userLock: string;
      userEmail: string;
      userPhone: string;
      userNationality: string;
      userMemberUntil?: components["schemas"]["UTCTime"];
      userMemberSince?: components["schemas"]["UTCTime"];
      userDancer: string;
    };
    Day: string;
    Key: number;
    UTCTime: string;
  };
}

export interface operations {}

export interface external {}
