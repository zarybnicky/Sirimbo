fragment Posting on Posting {
  id
  amount
  transaction {
    id
    description
    effectiveDate
    payment {
      ...Payment
    }
  }
}

fragment Payment on Payment {
  id
  status
  isAutoCreditAllowed
  dueAt
  paidAt
  createdAt
  variableSymbol
  specificSymbol
  cohortSubscription {
    id
    cohort {
      id: sId
      sName
    }
  }
  eventRegistration {
    id
    event {
      ...Event
    }
  }
  eventInstance {
    id
    since
    event {
      ...Event
    }
  }
}

mutation CreateCreditTransaction($input: CreateCreditTransactionInput!) {
  createCreditTransaction(input: $input) {
    transaction {
      id
      description
      effectiveDate
      postings {
        nodes {
          id
          amount
          account {
            id
            person {
              id
              name
            }
          }
        }
      }
    }
  }
}

query BalanceSheet($since: Datetime, $until: Datetime) {
  accountsList {
    person {
      id
      name
      firstName
      lastName
    }
    assets(since: $since, until: $until)
    liabilities(since: $since, until: $until)
  }
}
