fragment PersonBasic on Person {
  id
  name
  firstName
  lastName
  gender
  birthDate
  email
  phone
  taxIdentificationNumber
}

fragment Person on Person {
  ...PersonBasic
  cstsId
  wdsfId
  nationalIdNumber
  nationality
  cohortIds
  isAdmin
  isTrainer
  isMember
  prefixTitle
  suffixTitle
}

fragment PersonWithLinks on Person {
  ...Person
  tenantMembershipsList(orderBy: SINCE_ASC) {
    ...TenantMembership
  }
  cohortMembershipsList(orderBy: SINCE_ASC) {
    ...CohortMembership
  }
  tenantAdministratorsList(orderBy: SINCE_ASC) {
    ...TenantAdministrator
  }
  tenantTrainersList(orderBy: SINCE_ASC) {
    ...TenantTrainer
  }
  allCouplesList {
    ...Couple
  }
  userProxiesList {
    ...UserProxy
  }
  personInvitationsList(condition: { usedAt: null }) {
    id
    email
    createdAt
  }
}

query PersonAttendance($id: BigInt!) {
  person(id: $id) {
    ...Person
    eventAttendancesList: recentAttendanceList {
      ...EventAttendance
      instance {
        ...EventInstanceWithEvent
      }
    }
    weeklyAttendanceList {
      week
      eventCount
    }
  }
}

query PersonPayments($id: BigInt!) {
  person(id: $id) {
    ...Person
    unpaidPayments: paymentDebtorsList(condition: { isUnpaid: true }) {
      id
      price {
        amount
        currency
      }
      payment {
        ...Payment
      }
    }
    accountsList {
      id
      balance
      currency
      postingsList {
        ...Posting
      }
    }
  }
}

query PersonMemberships($id: BigInt!) {
  person(id: $id) {
    ...PersonWithLinks
  }
}

query FullPersonList {
  people {
    nodes {
      ...Person
    }
  }
}

query PersonAccounts {
  filteredPeopleList {
    ...PersonBasic
    accountsList {
      id
      balance
      currency
    }
  }
}

query UnpaidPayments {
  unpaidPayments: paymentDebtorsList(condition: { isUnpaid: true }) {
    id
    person {
      ...PersonBasic
    }
    price {
      amount
      currency
    }
    payment {
      ...Payment
    }
  }
}

query PersonList($inCohorts: [BigInt!], $isTrainer: Boolean, $isAdmin: Boolean) {
  filteredPeopleList(inCohorts: $inCohorts, isTrainer: $isTrainer, isAdmin: $isAdmin) {
    ...Person
    cohortMembershipsList {
      id
      cohort {
        id
        name
      }
    }
    activeCouplesList {
      ...Couple
    }
  }
}

query TrainerList($tenantId: BigInt) {
  tenantTrainersList(condition: { tenantId: $tenantId, active: true }) {
    id
    person {
      ...Person
    }
  }
}

mutation CreateInvitation($input: CreatePersonInvitationInput!) {
  createPersonInvitation(input: $input) {
    personInvitation {
      id
      email
      createdAt
    }
  }
}

mutation CreatePerson($input: CreatePersonInput!) {
  createPerson(input: $input) {
    p {
      ...Person
    }
  }
}

mutation UpdatePerson($input: UpdatePersonInput!) {
  updatePerson(input: $input) {
    person {
      ...Person
    }
  }
}

mutation DeletePerson($id: BigInt!) {
  deletePerson(input: { id: $id }) {
    __typename
  }
}
