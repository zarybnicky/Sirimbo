fragment Announcement on Upozorneni {
  __typename
  id
  upNadpis
  upText
  upTimestampAdd
  userByUpKdo {
    id
    uJmeno
    uPrijmeni
  }
  upozorneniSkupiniesByUpsIdRodic {
    nodes {
      id
      cohortByUpsIdSkupina {
        ...CohortBasic
      }
    }
  }
  scheduledSince
  scheduledUntil
  isVisible
  sticky
}

query StickyAnnouncements {
  stickyAnnouncements {
    totalCount
    nodes {
      ...Announcement
    }
  }
}

query MyAnnouncements($archive: Boolean = false, $first: Int, $offset: Int) {
  myAnnouncements(
    archive: $archive,
    first: $first,
    offset: $offset,
  ) {
    totalCount
    nodes {
      ...Announcement
    }
  }
}

query ArchivedAnnouncements($first: Int, $offset: Int) {
  archivedAnnouncements(
    first: $first,
    offset: $offset,
  ) {
    totalCount
    nodes {
      ...Announcement
    }
  }
}

query AnnouncementList($first: Int, $cursor: Cursor) {
  upozornenis(
    first: $first,
    after: $cursor,
    orderBy: [UP_TIMESTAMP_ADD_DESC],
  ) {
    totalCount
    nodes {
      ...Announcement
    }
    pageInfo {
      __typename
      hasNextPage
      endCursor
    }
  }
}

mutation ToggleUpozorneniVisible($id: BigInt!, $visible: Boolean!) {
  updateUpozorneniById(input: {id: $id, patch: {isVisible: $visible}}) {
    upozorneni {
      ...Announcement
    }
  }
}

mutation ToggleUpozorneniSticky($id: BigInt!, $sticky: Boolean!) {
  updateUpozorneniById(input: {id: $id, patch: {sticky: $sticky}}) {
    upozorneni {
      ...Announcement
    }
  }
}

query Announcement($id: BigInt!) {
  upozorneni(upId: $id) {
    ...Announcement
  }
}

mutation CreateAnnouncement($input: UpozorneniInput!) {
  createUpozorneni(input: {upozorneni: $input}) {
    upozorneni {
      ...Announcement
    }
  }
}

mutation UpdateAnnouncement($id: BigInt!, $patch: UpozorneniPatch!) {
  updateUpozorneni(input: {upId: $id, patch: $patch}) {
    upozorneni {
      ...Announcement
    }
  }
}

mutation DeleteAnnouncement($id: BigInt!) {
  deleteUpozorneniById(input: {id: $id}) {
    __typename
  }
}
