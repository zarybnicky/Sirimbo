fragment CohortBasic on Skupiny {
  id
  sName
  sColorRgb
}

fragment Cohort on Skupiny {
  id
  sName
  sLocation
  sVisible
  sColorRgb
  ordering
  sDescription
  cohortGroup
}

query CohortList($first: Int, $offset: Int, $visible: Boolean) {
  getCurrentTenant {
    id
    skupinies(first: $first, offset: $offset, condition: {sVisible: $visible}, orderBy: [ORDERING_ASC]) {
      nodes {
        ...Cohort
      }
    }
  }
}

query CohortWithMembers($id: BigInt!) {
  entity: skupinyById(id: $id) {
    ...Cohort
    cohortMembershipsByCohortIdList(condition: {active: true}, orderBy: [PERSON_BY_PERSON_ID__LAST_NAME_ASC, PERSON_BY_PERSON_ID__FIRST_NAME_ASC]) {
      ...CohortMembership
    }
  }
}

query Cohort($id: BigInt!) {
  entity: skupinyById(id: $id) {
    ...Cohort
  }
}

mutation CreateCohort($input: SkupinyInput!) {
  createSkupiny(input: {skupiny: $input}) {
    skupiny {
      ...Cohort
    }
  }
}

mutation UpdateCohort($id: BigInt!, $patch: SkupinyPatch!) {
  updateSkupinyById(input: {id: $id, patch: $patch}) {
    skupiny {
      ...Cohort
    }
  }
}

mutation DeleteCohort($id: BigInt!) {
  deleteSkupinyById(input: {id: $id}) {
    __typename
  }
}
