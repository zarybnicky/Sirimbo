--! Previous: sha1:6aa507ca2df6c09b5682785f95f381d946bf3855
--! Hash: sha1:9c7127f1e73ce8f6e621635d319eea2ad1430ac6

-- Write your migration here

drop table if exists form_responses;
create table form_responses (
  id bigint generated by default as identity primary key,
  type text not null,
  data jsonb not null,
  url text not null,
  created_at timestamptz not null default now(),
  updated_at timestamptz not null default now()
);
create trigger _100_timestamps before insert or update on form_responses
  for each row execute procedure app_private.tg__timestamps();

do $$ declare
  activity app_private.crm_activity;
  prospect app_private.crm_prospect;
begin
  FOR activity IN SELECT * FROM app_private.crm_activity LOOP
    select * into prospect from app_private.crm_prospect where id = activity.prospect;
    insert into form_responses (type, url, data, created_at)
      values ('Přijď tančit!', activity.origin, row_to_json(prospect.data), activity.created_at);
  END LOOP;
end $$;

create or replace function crm_copy_to_form_responses() returns trigger as $$
declare
  prospect app_private.crm_prospect;
begin
  select * into prospect from app_private.crm_prospect where id = NEW.prospect;
  insert into form_responses (type, url, data)
    values ('Přijď tančit!', NEW.origin, row_to_json(prospect.data), NEW.created_at);
  return NEW;
end;
$$ language plpgsql volatile;
select * from plpgsql_check_function('crm_copy_to_form_responses', 'app_private.crm_activity');

drop trigger if exists crm_copy_to_form_responses ON app_private.crm_activity;
create trigger crm_copy_to_form_responses
  after insert or update on app_private.crm_activity
  for each row
  execute procedure crm_copy_to_form_responses();

create or replace function public.submit_form(type text, data jsonb, url text) returns void as $$
begin
  insert into form_responses (type, data, url) values (type, data, url);
end;
$$ language plpgsql strict volatile security definer;
select * from plpgsql_check_function('public.submit_form');
