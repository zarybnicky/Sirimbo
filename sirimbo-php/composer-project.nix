# This file is generated by composer-plugin-nixify.
# Manual changes might be lost - proceed with caution!

{ lib, php, phpPackages, unzip, stdenv, runCommandLocal, writeText, fetchurl

# Default fetcher.
, fetcher ? (args: fetchurl { inherit (args) name urls sha256; })

}: src:

with lib;

let

  composerPath = phpPackages.composer.src;
  cacheEntries = [
    { name = "stephank_composer-plugin-nixify-1.0.5.0"; filename = "stephank/composer-plugin-nixify/e2a1020a7b33878e01d46dacea0674500d4a711e.zip"; sha256 = "155098d53ec086f0c382f14dd7634909b55adf291bebb4f7c308b8ac399f3cf2"; urls = [ "https://nexus.inuits.io/repository/composer/stephank/composer-plugin-nixify/v1.0.5/stephank-composer-plugin-nixify-v1.0.5.zip" ]; }
    { name = "symfony_polyfill-ctype-1.22.1.0"; filename = "symfony/polyfill-ctype/f101c695899698a26dc58b55ff2f28d9def15bcb.zip"; sha256 = "6d5d5205cec86f7e505903972e2e1a414c455c113fe98207a89b9cce5341f34a"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/polyfill-ctype/v1.22.1/symfony-polyfill-ctype-v1.22.1.zip" ]; }
    { name = "symfony_polyfill-mbstring-1.22.1.0"; filename = "symfony/polyfill-mbstring/bb13aad0a577fe90cf098302d505f2ecdbd1bfe0.zip"; sha256 = "e8eb6b5c0ffaa98506d15ae0ad327de65e17fdd0dfcf559312a70bd91d38a6d6"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/polyfill-mbstring/v1.22.1/symfony-polyfill-mbstring-v1.22.1.zip" ]; }
    { name = "twig_twig-3.3.2.0"; filename = "twig/twig/48d2f771262f85586c973ac86d7e2e49bdea09c2.zip"; sha256 = "1d6b7aa4329d85c359caf7769c274dbde06773c5ba82240f90ff2cbd8ee50740"; urls = [ "https://nexus.inuits.io/repository/composer/twig/twig/v3.3.2/twig-twig-v3.3.2.zip" ]; }
    { name = "ocramius_package-versions-1.9.0.0"; filename = "ocramius/package-versions/6a735e704d913cafb4c3c7923e07cf6fb33bfad2.zip"; sha256 = "d3e774b603d14012a074aae700a19d56aa5256566d380effb88333a1a4784dda"; urls = [ "https://nexus.inuits.io/repository/composer/ocramius/package-versions/1.9.0/ocramius-package-versions-1.9.0.zip" ]; }
    { name = "psr_container-1.1.1.0"; filename = "psr/container/e9bac4c8bdeeacc83dc4a816d7df1ee775d1e9c3.zip"; sha256 = "9667379def7c9222ea036f8199ef905f31c42e2baafdb4a63927d23aaef3db61"; urls = [ "https://nexus.inuits.io/repository/composer/psr/container/1.1.1/psr-container-1.1.1.zip" ]; }
    { name = "sserbin_twig-linter-9999999-dev"; filename = "sserbin/twig-linter/ab62d76addaa547e875f7859d0d08e6d5a667534.zip"; sha256 = "3cb1e0921b7cbc732050c2b62b1b3bc7088b1ffed9646353f80a6bf7d428eb51"; urls = [ "https://nexus.inuits.io/repository/composer/sserbin/twig-linter/dev-master/sserbin-twig-linter-dev-master.zip" ]; }
    { name = "symfony_console-5.2.8.0"; filename = "symfony/console/c3bffd7d1920e061be3fc1a5a131cc25d23b55f8.zip"; sha256 = "1efe54a844f171b25a1581dba4a0273d66f708529dfc8816081a700098156459"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/console/v5.2.8/symfony-console-v5.2.8.zip" ]; }
    { name = "symfony_finder-5.2.8.0"; filename = "symfony/finder/19f9b0dcfcb0ce67ba8d7c247cb6cc5d20e1c074.zip"; sha256 = "82e593fef0ce1c446f768c18deae359484491ff382d76f528374acb0d0548ded"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/finder/v5.2.8/symfony-finder-v5.2.8.zip" ]; }
    { name = "symfony_polyfill-intl-grapheme-1.22.1.0"; filename = "symfony/polyfill-intl-grapheme/c6bd28fc789d3dee5b7f3bb23704fb5e56a0cb7e.zip"; sha256 = "599235a1146c3f5eed4fa0007ecddacd7a2a47558136b83fd54a7a3b239a7dcc"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/polyfill-intl-grapheme/v1.22.1/symfony-polyfill-intl-grapheme-v1.22.1.zip" ]; }
    { name = "symfony_polyfill-intl-normalizer-1.22.1.0"; filename = "symfony/polyfill-intl-normalizer/56d40206029bbd98ce5eba86ba538fa5c12e0103.zip"; sha256 = "89691216c0b0e8256f75a16295bd83315260003121da13bcf31fe9a90c9d3912"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/polyfill-intl-normalizer/v1.22.1/symfony-polyfill-intl-normalizer-v1.22.1.zip" ]; }
    { name = "symfony_polyfill-php73-1.22.1.0"; filename = "symfony/polyfill-php73/a3dcf590ee0bd09d653de981b3d37a011d45f48d.zip"; sha256 = "e07def80a19688e80801448caafaf54744c970a155819fa7fe4dc38445173883"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/polyfill-php73/v1.22.1/symfony-polyfill-php73-v1.22.1.zip" ]; }
    { name = "symfony_polyfill-php80-1.22.1.0"; filename = "symfony/polyfill-php80/c10f376c548efd30aa75a99fa3a57986290bea24.zip"; sha256 = "6d2f561e5da2055c470724cc680177d68dd46ebf529a7f31fd1ed73357940ed6"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/polyfill-php80/v1.22.1/symfony-polyfill-php80-v1.22.1.zip" ]; }
    { name = "symfony_service-contracts-2.4.0.0"; filename = "symfony/service-contracts/0c17599b3704c92f53b07df3df1267aa83dff66f.zip"; sha256 = "3e6c0e0b3831b43c46b8ef84ddd3f549bcadc724ecf1976d526330a96a1ea7c4"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/service-contracts/v2.4.0/symfony-service-contracts-v2.4.0.zip" ]; }
    { name = "symfony_string-5.2.8.0"; filename = "symfony/string/a86126a57be73e40a714b1a57c8c8ec841379dcd.zip"; sha256 = "9fd67250f8aa748ff4463b67b9a200426669c5351a7b6e1d04a061ae6adf8a24"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/string/v5.2.8/symfony-string-v5.2.8.zip" ]; }
  ];

  # Shell snippet to collect all project dependencies.
  collectCacheScript = writeText "collect-cache.sh" (
    concatMapStrings (args: ''
      (
        cacheFile=${escapeShellArg args.filename}
        cacheFilePath="$COMPOSER_CACHE_DIR/files/$cacheFile"
        mkdir -p "$(dirname "$cacheFilePath")"
        cp ${escapeShellArg (fetcher args)} "$cacheFilePath"
      )
    '') cacheEntries
  );

in stdenv.mkDerivation {
  name = "zarybnicky_tkolymp.cz";
  inherit src;

  # Make sure the build uses the right PHP version everywhere.
  # Also include unzip for Composer.
  buildInputs = [ php unzip ];

  # Defines the shell alias to run Composer.
  postHook = ''
    composer () {
      php "$NIX_COMPOSER_PATH" "$@"
    }
  '';

  configurePhase = ''
    runHook preConfigure

    # Set the cache directory for Composer.
    export COMPOSER_CACHE_DIR="$NIX_BUILD_TOP/.composer/cache"

    # Build the cache directory contents.
    source ${collectCacheScript}

    # Store the absolute path to Composer for the 'composer' alias.
    export NIX_COMPOSER_PATH="$(readlink -f ${escapeShellArg composerPath})"

    # Run normal Composer install to complete dependency installation.
    composer install

    runHook postConfigure
  '';

  buildPhase = ''
    runHook preBuild
    runHook postBuild
  '';

  installPhase = ''
    runHook preInstall

    mkdir -p $out/libexec $out/bin

    # Move the entire project to the output directory.
    mv $PWD "$out/libexec/$sourceRoot"
    cd "$out/libexec/$sourceRoot"

    # Update the path to Composer.
    export NIX_COMPOSER_PATH="$(readlink -f ${escapeShellArg composerPath})"

    # Invoke a plugin internal command to setup binaries.
    composer nixify-install-bin "$out/bin"

    runHook postInstall
  '';

  passthru = {
    inherit php;
  };
}
