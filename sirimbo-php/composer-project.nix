# This file is generated by composer-plugin-nixify.
# Manual changes might be lost - proceed with caution!

{ lib, php, phpPackages, unzip, stdenv, runCommandLocal, writeText, fetchurl

# Default fetcher.
, fetcher ? (args: fetchurl { inherit (args) name urls sha256; })

}: src:

with lib;

let

  composerPath = phpPackages.composer.src;
  cacheEntries = [
    { name = "stephank_composer-plugin-nixify-1.0.5.0"; filename = "stephank/composer-plugin-nixify/e2a1020a7b33878e01d46dacea0674500d4a711e.zip"; sha256 = "155098d53ec086f0c382f14dd7634909b55adf291bebb4f7c308b8ac399f3cf2"; urls = [ "https://nexus.inuits.io/repository/composer/stephank/composer-plugin-nixify/v1.0.5/stephank-composer-plugin-nixify-v1.0.5.zip" ]; }
    { name = "symfony_polyfill-ctype-1.22.1.0"; filename = "symfony/polyfill-ctype/f101c695899698a26dc58b55ff2f28d9def15bcb.zip"; sha256 = "6d5d5205cec86f7e505903972e2e1a414c455c113fe98207a89b9cce5341f34a"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/polyfill-ctype/v1.22.1/symfony-polyfill-ctype-v1.22.1.zip" ]; }
    { name = "symfony_polyfill-mbstring-1.22.1.0"; filename = "symfony/polyfill-mbstring/bb13aad0a577fe90cf098302d505f2ecdbd1bfe0.zip"; sha256 = "e8eb6b5c0ffaa98506d15ae0ad327de65e17fdd0dfcf559312a70bd91d38a6d6"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/polyfill-mbstring/v1.22.1/symfony-polyfill-mbstring-v1.22.1.zip" ]; }
    { name = "twig_twig-3.3.0.0"; filename = "twig/twig/f54f037e3085f153c2425e3b50a04945a2134d4d.zip"; sha256 = "1aa450b4009a2a7c1e09481907e540552633be20d83647887b7d1ba1bd64825a"; urls = [ "https://nexus.inuits.io/repository/composer/twig/twig/v3.3.0/twig-twig-v3.3.0.zip" ]; }
    { name = "ocramius_package-versions-1.9.0.0"; filename = "ocramius/package-versions/6a735e704d913cafb4c3c7923e07cf6fb33bfad2.zip"; sha256 = "d3e774b603d14012a074aae700a19d56aa5256566d380effb88333a1a4784dda"; urls = [ "https://nexus.inuits.io/repository/composer/ocramius/package-versions/1.9.0/ocramius-package-versions-1.9.0.zip" ]; }
    { name = "psr_container-1.1.1.0"; filename = "psr/container/e9bac4c8bdeeacc83dc4a816d7df1ee775d1e9c3.zip"; sha256 = "9667379def7c9222ea036f8199ef905f31c42e2baafdb4a63927d23aaef3db61"; urls = [ "https://nexus.inuits.io/repository/composer/psr/container/1.1.1/psr-container-1.1.1.zip" ]; }
    { name = "sserbin_twig-linter-9999999-dev"; filename = "sserbin/twig-linter/ab62d76addaa547e875f7859d0d08e6d5a667534.zip"; sha256 = "3cb1e0921b7cbc732050c2b62b1b3bc7088b1ffed9646353f80a6bf7d428eb51"; urls = [ "https://nexus.inuits.io/repository/composer/sserbin/twig-linter/dev-master/sserbin-twig-linter-dev-master.zip" ]; }
    { name = "symfony_console-5.2.5.0"; filename = "symfony/console/777d28e79688d1c279c03792350b8a3af4a78d42.zip"; sha256 = "c28802d5a9791f14ebe95137df98d3efa9ca0938b92028ef89ce9d34b617b18d"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/console/v5.2.5/symfony-console-v5.2.5.zip" ]; }
    { name = "symfony_finder-5.2.4.0"; filename = "symfony/finder/ef69a3dbd4c8dae40e3af3dca8befa51779f06bf.zip"; sha256 = "f8fc9c54214df3c3218d7eeca5a28eeb4b29eec99e80fa889e21b692a8bd659f"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/finder/v5.2.4/symfony-finder-v5.2.4.zip" ]; }
    { name = "symfony_polyfill-intl-grapheme-1.22.1.0"; filename = "symfony/polyfill-intl-grapheme/c6bd28fc789d3dee5b7f3bb23704fb5e56a0cb7e.zip"; sha256 = "599235a1146c3f5eed4fa0007ecddacd7a2a47558136b83fd54a7a3b239a7dcc"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/polyfill-intl-grapheme/v1.22.1/symfony-polyfill-intl-grapheme-v1.22.1.zip" ]; }
    { name = "symfony_polyfill-intl-normalizer-1.22.1.0"; filename = "symfony/polyfill-intl-normalizer/56d40206029bbd98ce5eba86ba538fa5c12e0103.zip"; sha256 = "89691216c0b0e8256f75a16295bd83315260003121da13bcf31fe9a90c9d3912"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/polyfill-intl-normalizer/v1.22.1/symfony-polyfill-intl-normalizer-v1.22.1.zip" ]; }
    { name = "symfony_polyfill-php73-1.22.1.0"; filename = "symfony/polyfill-php73/a3dcf590ee0bd09d653de981b3d37a011d45f48d.zip"; sha256 = "e07def80a19688e80801448caafaf54744c970a155819fa7fe4dc38445173883"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/polyfill-php73/v1.22.1/symfony-polyfill-php73-v1.22.1.zip" ]; }
    { name = "symfony_polyfill-php80-1.22.1.0"; filename = "symfony/polyfill-php80/c10f376c548efd30aa75a99fa3a57986290bea24.zip"; sha256 = "6d2f561e5da2055c470724cc680177d68dd46ebf529a7f31fd1ed73357940ed6"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/polyfill-php80/v1.22.1/symfony-polyfill-php80-v1.22.1.zip" ]; }
    { name = "symfony_service-contracts-2.2.0.0"; filename = "symfony/service-contracts/abbf48605fabdf7f61477799e3ceac1f0ef28757.zip"; sha256 = "8287ba33c2709c2b784eace50c0b1452c504543b4103896059b8647169c01199"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/service-contracts/v2.2.0/symfony-service-contracts-v2.2.0.zip" ]; }
    { name = "symfony_string-5.2.4.0"; filename = "symfony/string/cfa33df6a4436494e4e9211a1875c16e4c14c7fa.zip"; sha256 = "192b1469bd5e1d9358312b118bd527ebb04c61a37e7e7a486f08e524cf438048"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/string/v5.2.4/symfony-string-v5.2.4.zip" ]; }
  ];

  # Shell snippet to collect all project dependencies.
  collectCacheScript = writeText "collect-cache.sh" (
    concatMapStrings (args: ''
      (
        cacheFile=${escapeShellArg args.filename}
        cacheFilePath="$COMPOSER_CACHE_DIR/files/$cacheFile"
        mkdir -p "$(dirname "$cacheFilePath")"
        cp ${escapeShellArg (fetcher args)} "$cacheFilePath"
      )
    '') cacheEntries
  );

in stdenv.mkDerivation {
  name = "zarybnicky_tkolymp.cz";
  inherit src;

  # Make sure the build uses the right PHP version everywhere.
  # Also include unzip for Composer.
  buildInputs = [ php unzip ];

  # Defines the shell alias to run Composer.
  postHook = ''
    composer () {
      php "$NIX_COMPOSER_PATH" "$@"
    }
  '';

  configurePhase = ''
    runHook preConfigure

    # Set the cache directory for Composer.
    export COMPOSER_CACHE_DIR="$NIX_BUILD_TOP/.composer/cache"

    # Build the cache directory contents.
    source ${collectCacheScript}

    # Store the absolute path to Composer for the 'composer' alias.
    export NIX_COMPOSER_PATH="$(readlink -f ${escapeShellArg composerPath})"

    # Run normal Composer install to complete dependency installation.
    composer install

    runHook postConfigure
  '';

  buildPhase = ''
    runHook preBuild
    runHook postBuild
  '';

  installPhase = ''
    runHook preInstall

    mkdir -p $out/libexec $out/bin

    # Move the entire project to the output directory.
    mv $PWD "$out/libexec/$sourceRoot"
    cd "$out/libexec/$sourceRoot"

    # Update the path to Composer.
    export NIX_COMPOSER_PATH="$(readlink -f ${escapeShellArg composerPath})"

    # Invoke a plugin internal command to setup binaries.
    composer nixify-install-bin "$out/bin"

    runHook postInstall
  '';

  passthru = {
    inherit php;
  };
}
