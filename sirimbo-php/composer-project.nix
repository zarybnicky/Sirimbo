# This file is generated by composer-plugin-nixify.
# Manual changes might be lost - proceed with caution!

{ lib, php, phpPackages, unzip, stdenv, runCommandLocal, writeText, fetchurl

# Default fetcher.
, fetcher ? (args: fetchurl { inherit (args) name urls sha256; })

}: src:

with lib;

let

  composerPath = phpPackages.composer.src;
  cacheEntries = [
    { name = "stephank_composer-plugin-nixify-1.0.5.0"; filename = "stephank/composer-plugin-nixify/e2a1020a7b33878e01d46dacea0674500d4a711e.zip"; sha256 = "155098d53ec086f0c382f14dd7634909b55adf291bebb4f7c308b8ac399f3cf2"; urls = [ "https://nexus.inuits.io/repository/composer/stephank/composer-plugin-nixify/v1.0.5/stephank-composer-plugin-nixify-v1.0.5.zip" ]; }
    { name = "symfony_polyfill-ctype-1.20.0.0"; filename = "symfony/polyfill-ctype/96413989352e4c250610adb11bc3fe0c0216750a.zip"; sha256 = "b606e3c567b8221f73bcfa4d8eab6cad7b63725614577f54b53742f3afdfa33f"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/polyfill-ctype/v1.20.0/symfony-polyfill-ctype-v1.20.0.zip" ]; }
    { name = "symfony_polyfill-mbstring-1.20.0.0"; filename = "symfony/polyfill-mbstring/0fadfb718dd2a7e31a7f8732cdd2bec1184e0f90.zip"; sha256 = "fc1851cbd1adf5eb74631e2a0e8e7452bb53a73265e95e5d8c0b1577c2a1f4e7"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/polyfill-mbstring/v1.20.0/symfony-polyfill-mbstring-v1.20.0.zip" ]; }
    { name = "twig_twig-3.1.1.0"; filename = "twig/twig/60b85e2d4dd2c0780928110740c8b7ef474842af.zip"; sha256 = "482ac4e13b2087ab9bf51a639d0f6e70878fa4d9323245116b3914746942041e"; urls = [ "https://nexus.inuits.io/repository/composer/twig/twig/v3.1.1/twig-twig-v3.1.1.zip" ]; }
    { name = "ocramius_package-versions-1.9.0.0"; filename = "ocramius/package-versions/6a735e704d913cafb4c3c7923e07cf6fb33bfad2.zip"; sha256 = "d3e774b603d14012a074aae700a19d56aa5256566d380effb88333a1a4784dda"; urls = [ "https://nexus.inuits.io/repository/composer/ocramius/package-versions/1.9.0/ocramius-package-versions-1.9.0.zip" ]; }
    { name = "psr_container-1.0.0.0"; filename = "psr/container/44d6912b1a559052149560262fb568f5ce497518.zip"; sha256 = "92786662ffa29e766ef47b00d6021d29718b89576fd39940740f2cfe36317f66"; urls = [ "https://nexus.inuits.io/repository/composer/psr/container/1.0.0/psr-container-1.0.0.zip" ]; }
    { name = "sserbin_twig-linter-9999999-dev"; filename = "sserbin/twig-linter/ab62d76addaa547e875f7859d0d08e6d5a667534.zip"; sha256 = "3cb1e0921b7cbc732050c2b62b1b3bc7088b1ffed9646353f80a6bf7d428eb51"; urls = [ "https://nexus.inuits.io/repository/composer/sserbin/twig-linter/dev-master/sserbin-twig-linter-dev-master.zip" ]; }
    { name = "symfony_console-5.2.1.0"; filename = "symfony/console/aa8173616991d3a870dc029725359eabf7f02a6c.zip"; sha256 = "121b552f2bc0e315fe043b165a3bd7cda0458bfa0150dc714b46930dbc4da38c"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/console/v5.2.1/symfony-console-v5.2.1.zip" ]; }
    { name = "symfony_finder-5.2.1.0"; filename = "symfony/finder/048abaf6272e85a38c9ab99f2c243feed9c991ff.zip"; sha256 = "191c3c4292975dc80b54353f1e703ec517a760855fc0ade5b5fee839504b22be"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/finder/v5.2.1/symfony-finder-v5.2.1.zip" ]; }
    { name = "symfony_polyfill-intl-grapheme-1.20.0.0"; filename = "symfony/polyfill-intl-grapheme/14a1d7f2e116512bc727709a1ea277728b7193c7.zip"; sha256 = "1d02a023aaa371f04b744be19ab9e6e5dc0acf7a7d78b86f0cd66c1302378815"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/polyfill-intl-grapheme/v1.20.0/symfony-polyfill-intl-grapheme-v1.20.0.zip" ]; }
    { name = "symfony_polyfill-intl-normalizer-1.20.0.0"; filename = "symfony/polyfill-intl-normalizer/8651c082f45901af9e10e7ba1447130ac63bd452.zip"; sha256 = "4fe95c93bcc98b7fd6ec30d67e0f2fc235ed48e6557da75c937fdb8568189bf0"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/polyfill-intl-normalizer/v1.20.0/symfony-polyfill-intl-normalizer-v1.20.0.zip" ]; }
    { name = "symfony_polyfill-php73-1.20.0.0"; filename = "symfony/polyfill-php73/dd41e6b7f6f60f31b88f36721051039db23f9d14.zip"; sha256 = "6369a3cd95f1eb021eb33b886f287c7a4c63620025b7b73d761878027c7c3903"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/polyfill-php73/v1.20.0/symfony-polyfill-php73-v1.20.0.zip" ]; }
    { name = "symfony_polyfill-php80-1.20.0.0"; filename = "symfony/polyfill-php80/47f1fafe42d42228d695ad15b2b7115fe1dffac6.zip"; sha256 = "2f0a435d50a187a6ba83fedcf3d61af6b2324910891bc6da40e65047469f6fe0"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/polyfill-php80/v1.20.0/symfony-polyfill-php80-v1.20.0.zip" ]; }
    { name = "symfony_service-contracts-2.2.0.0"; filename = "symfony/service-contracts/abbf48605fabdf7f61477799e3ceac1f0ef28757.zip"; sha256 = "8287ba33c2709c2b784eace50c0b1452c504543b4103896059b8647169c01199"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/service-contracts/v2.2.0/symfony-service-contracts-v2.2.0.zip" ]; }
    { name = "symfony_string-5.2.1.0"; filename = "symfony/string/281ee643568dea128c18bc3bf38c1633d2328e05.zip"; sha256 = "5020e132d8f2194156bcfea665a2b41fc06b07e75264e990c94d53a7455cc6db"; urls = [ "https://nexus.inuits.io/repository/composer/symfony/string/v5.2.1/symfony-string-v5.2.1.zip" ]; }
  ];

  # Shell snippet to collect all project dependencies.
  collectCacheScript = writeText "collect-cache.sh" (
    concatMapStrings (args: ''
      (
        cacheFile=${escapeShellArg args.filename}
        cacheFilePath="$COMPOSER_CACHE_DIR/files/$cacheFile"
        mkdir -p "$(dirname "$cacheFilePath")"
        cp ${escapeShellArg (fetcher args)} "$cacheFilePath"
      )
    '') cacheEntries
  );

in stdenv.mkDerivation {
  name = "zarybnicky_tkolymp.cz";
  inherit src;

  # Make sure the build uses the right PHP version everywhere.
  # Also include unzip for Composer.
  buildInputs = [ php unzip ];

  # Defines the shell alias to run Composer.
  postHook = ''
    composer () {
      php "$NIX_COMPOSER_PATH" "$@"
    }
  '';

  configurePhase = ''
    runHook preConfigure

    # Set the cache directory for Composer.
    export COMPOSER_CACHE_DIR="$NIX_BUILD_TOP/.composer/cache"

    # Build the cache directory contents.
    source ${collectCacheScript}

    # Store the absolute path to Composer for the 'composer' alias.
    export NIX_COMPOSER_PATH="$(readlink -f ${escapeShellArg composerPath})"

    # Run normal Composer install to complete dependency installation.
    composer install

    runHook postConfigure
  '';

  buildPhase = ''
    runHook preBuild
    runHook postBuild
  '';

  installPhase = ''
    runHook preInstall

    mkdir -p $out/libexec $out/bin

    # Move the entire project to the output directory.
    mv $PWD "$out/libexec/$sourceRoot"
    cd "$out/libexec/$sourceRoot"

    # Update the path to Composer.
    export NIX_COMPOSER_PATH="$(readlink -f ${escapeShellArg composerPath})"

    # Invoke a plugin internal command to setup binaries.
    composer nixify-install-bin "$out/bin"

    runHook postInstall
  '';

  passthru = {
    inherit php;
  };
}
