fragment Couple on Couple {
  id
  active
  since
  until
  woman {
    id
    firstName
    lastName
  }
  man {
    id
    firstName
    lastName
  }
}

query CoupleList($first: Int, $offset: Int, $active: Boolean = true) {
  couples(first: $first, offset: $offset, condition: { active: $active }) {
    totalCount
    nodes {
      ...Couple
    }
  }
}

query Couple($id: BigInt!) {
  couple(id: $id) {
    ...Couple
    eventRegistrationsList(orderBy: [EVENT_BY_EVENT_ID__SINCE_ASC], first: 10) {
      ...EventRegistration
    }
  }
}

mutation CreateCouple($input: CreateCoupleInput!) {
  createCouple(input: $input) {
    couple {
      ...Couple
    }
  }
}

mutation DeleteCouple($id: BigInt!) {
  deleteCouple(input: {coupleId: $id}) {
    __typename
  }
}
