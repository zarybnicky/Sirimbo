fragment ReservationItemBasic on NabidkaItem {
  __typename
  id: niId
  niPartner
  niPocetHod
  niLock
  paryByNiPartner {
    ...CouplePartial
  }
}

fragment ReservationBasic on Nabidka {
  id: nId
  nOd
  nDo
  nPocetHod
  nMaxPocetHod
  nLock
  nTimestamp
  nVisible
  nTrener
  userByNTrener {
    fullName
    uJmeno
    uPrijmeni
    id: uId
  }
}

fragment Reservation on Nabidka {
  ...ReservationBasic
  nabidkaItemsByNiIdRodic(orderBy: [NI_POCET_HOD_DESC]) {
    nodes {
      ...ReservationItemBasic
    }
  }
}

fragment MyReservation on Nabidka {
  ...Reservation
  myLessons
  freeLessons
}

query ReservationList($limit: Int, $offset: Int) {
  nabidkas(first: $limit, offset: $offset, orderBy: [N_OD_DESC]) {
    nodes {
      ...ReservationBasic
    }
    totalCount
  }
}

query Reservation($id: BigInt!) {
  nabidka(nId: $id) {
    ...Reservation
  }
}

query ReservationRange($startDate: Date!, $endDate: Date!) {
  reservationsForRange(startDate: $startDate, endDate: $endDate) {
    nodes {
      ...MyReservation
    }
  }
}

mutation SetDesiredLessons($id: BigInt!, $lessonCount: Int!) {
  reservationSetDesiredLessons(input: {reservationId: $id, lessonCount: $lessonCount}) {
    reservation {
      myLessons
      freeLessons
    }
  }
}

mutation ToggleReservationVisible($id: BigInt!, $visible: Boolean!) {
  updateNabidka(input: {nId: $id, patch: {nVisible: $visible}}) {
    nabidka {
      id: nId
    }
  }
}

mutation CreateReservation($input: NabidkaInput!) {
  createNabidka(input: {nabidka: $input}) {
    nabidka {
      id: nId
    }
  }
}

mutation UpdateReservation($id: BigInt!, $patch: NabidkaPatch!) {
  updateNabidka(input: {nId: $id, patch: $patch}) {
    __typename
  }
}

mutation DeleteReservation($id: BigInt!) {
  deleteNabidka(input: {nId: $id}) {
    __typename
  }
}
