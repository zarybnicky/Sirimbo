fragment UserPublic on User {
  id: uId
  uJmeno
  uPrijmeni
  uRodneCislo
  uTelefon
  uEmail
}

query User($id: BigInt!) {
  user(uId: $id) {
    ...User
  }
}

query UserList($confirmed: Boolean, $system: Boolean = false, $ban: Boolean = false, $limit: Int, $offset: Int) {
  users(condition: {uBan: $ban, uSystem: $system, uConfirmed: $confirmed}, offset: $offset, first: $limit) {
    totalCount
    nodes {
      ...User
    }
  }
}

query MsmtExport {
  members(condition: {sVisible: true}) {
    nodes {
      id: uId
      uJmeno
      uPrijmeni
      uEmail
      uTelefon
      uRodneCislo
      uNationality
      uNarozeni
      uCity
      uDistrict
      uConscriptionNumber
      uOrientationNumber
      uPostalCode
      uStreet
      sId
      sName
      sColorRgb
      sDescription
      sVisible
      paymentValid
      oldestPayment
      newestPayment
      uGroup
    }
  }
}

query MemberList($cohortId: BigInt) {
  members(condition: {sId: $cohortId}) {
    totalCount
    nodes {
      id: uId
      uJmeno
      uPrijmeni
      uEmail
      uTelefon
      uRodneCislo
      sId
      sName
      sColorRgb
      sDescription
      sVisible
      paymentValid
    }
  }
}

query TrainerList {
  trainers {
    totalCount
    nodes {
      ...User
    }
  }
}

mutation ConfirmUser($id: BigInt!, $role: BigInt!, $cohort: BigInt!) {
  confirmUser(input: {id: $id, grp: $role, cohort: $cohort}) {
    __typename
  }
}

mutation CreateUser($input: UserInput!) {
  createUser(input: {user: $input}) {
    user {
      id: uId
    }
  }
}

mutation UpdateUser($id: BigInt!, $patch: UserPatch!) {
  updateUser(input: {uId: $id, patch: $patch}) {
    __typename
  }
}

mutation DeleteUser($id: BigInt!) {
  deleteUser(input: {uId: $id}) {
    __typename
  }
}
