fragment ScheduleItem on RozpisItem {
  riOd
  riDo
  riId
  riLock
  riPartner
  paryByRiPartner {
    userByPIdPartner {
      uJmeno
      uId
      uPrijmeni
    }
    pId
  }
}

fragment Schedule on Rozpi {
  rDatum
  rId
  rKde
  rLock
  rTrener
  rVisible
  userByRTrener {
    uJmeno
    uId
    uPrijmeni
  }
  rozpisItemsByRiIdRodic(orderBy: [RI_OD_ASC]) {
    nodes {
      ...ScheduleItem
    }
  }
}

query ScheduleRange($startDate: Date!, $endDate: Date!) {
  schedulesForRange(startDate: $startDate, endDate: $endDate) {
    nodes {
      ...Schedule
    }
  }
}

query ScheduleList($limit: Int!, $offset: Int!) {
  rozpis(first: $limit, offset: $offset, orderBy: [R_DATUM_DESC]) {
    nodes {
      rDatum
      rId
      rKde
      rLock
      rTimestamp
      rTrener
      rVisible
      userByRTrener {
        uId
        uJmeno
        uPrijmeni
      }
      rozpisItemsByRiIdRodic {
        nodes {
          riDo
          riOd
          riId
          riPartner
        }
      }
    }
    totalCount
  }
}

fragment Lesson on RozpisItem {
  riId
  riOd
  riDo
  rozpiByRiIdRodic {
    rId
    rDatum
    rKde
    userByRTrener {
      uId
      uJmeno
      uPrijmeni
    }
  }
  paryByRiPartner {
    userByPIdPartner {
      uId
      uJmeno
      uPrijmeni
    }
    userByPIdPartnerka {
      uId
      uJmeno
      uPrijmeni
    }
  }
}

query MyLessons($startDate: Date, $endDate: Date) {
  currentCoupleIds {
    nodes
  }
  currentSessionId
  currentUserId
  myLessons(startDate: $startDate, endDate: $endDate) {
    nodes {
      ...Lesson
    }
  }
}

mutation ToggleScheduleVisible($id: BigInt!, $visible: Boolean!) {
  updateRozpi(input: {rId: $id, patch: {rVisible: $visible}}) {
    rozpi {
      rId
    }
  }
}
