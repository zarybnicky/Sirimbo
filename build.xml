<?xml version="1.0" encoding="UTF-8"?>

<project name="TKOlomouc" default="build" basedir=".">
    <property name="threads" value="2"/>
	<property name="basedir" value="${project.basedir}" />
	
    <target name="build" depends="prepare,try-parallel,phpunit,phpcb" />
	
    <target name="run-parallel">
            <parallel threadCount="${threads}">
                    <phingcall target="tasks" />        
            </parallel>                
    </target>
    <target name="run-serial">
            <phingcall target="tasks" />
    </target>
    <target name="tasks">
            <phingcall target="pdepend" />
            <phingcall target="phpmd-ci" />
            <phingcall target="phpcpd" />
            <phingcall target="phpcs-ci" />
            <phingcall target="phpdox" />
            <phingcall target="phploc" />
    </target>
    <target name="try-parallel"
            description="Run the pdepend, phpmd, phpcpd, phpcs, phpdoc and phploc tasks. Checks for parallel support in PHP.">
        <exec command="php -m | grep pcntl" returnProperty="pcntl_enabled"/>
        <if>
            <equals arg1="${pcntl_enabled}" arg2="pcntl" />
            <then>
                <echo message="PCNTL Enabled. Running Taks in parallel with ${threads} threads." />
                <phingcall target="run-parallel"/>
            </then>
            <else>
                <echo message="PCNTL is not enabled. Running task serially." />
                <phingcall target="run-serial"/>
            </else>
        </if>
    </target>
    
    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${basedir}/build/api"/>
        <delete dir="${basedir}/build/code-browser"/>
        <delete dir="${basedir}/build/coverage"/>
        <delete dir="${basedir}/build/logs"/>
        <delete dir="${basedir}/build/pdepend"/>
        <delete dir="${basedir}/build/phpdox"/>
    </target>
    
    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="${basedir}/build/api"/>
        <mkdir dir="${basedir}/build/code-browser"/>
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/pdepend"/>
        <mkdir dir="${basedir}/build/phpdox"/>
    </target>
    
    <target name="lint" description="Perform syntax check of sourcecode files">
        <apply executable="php">
            <arg value="-l" />
            
            <fileset dir="${basedir}/src">
                <include name="**/*.php" />
                <include name="**/*.inc" />
            </fileset>
        </apply>
    </target>
    
    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="phploc">
            <arg value="--log-csv" />
            <arg value="${basedir}/build/logs/phploc.csv" />
            <arg value="--exclude"/>
            <arg value="${basedir}/src/tests" />
            <arg path="${basedir}/src" />
        </exec>
    </target>
    
    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <exec executable="pdepend">
            <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
            <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
            <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
            <arg value="--ignore=${basedir}/src/tests" />
            <arg path="${basedir}/src" />
        </exec>
    </target>
    
    <target name="phpmd"
           description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpmd">
            <arg path="${basedir}/src" />
            <arg value="text" />
            <arg value="codesize,design,naming,unusedcode" />
            <arg value="--exclude" />
            <arg value="${basedir}/src/tests" />
        </exec>
    </target>
    
    <target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
        <exec executable="phpmd">
            <arg path="${basedir}/src" />
            <arg value="xml" />
            <arg value="codesize,design,naming,unusedcode" />
            <arg value="--reportfile" />
            <arg value="${basedir}/build/logs/pmd.xml" />
            <arg value="--exclude" />
            <arg value="${basedir}/src/tests" />
        </exec>
    </target>
    
    <target name="phpcs"
           description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="phpcs">
            <arg value="--extensions=php,inc" />
            <arg value="--standard=PSR2" />
            <arg value="--ignore=${basedir}/src/tests" />
            <arg path="${basedir}/src" />
        </exec>
    </target>
    
    <target name="phpcs-ci" description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
        <exec executable="phpcs" output="/dev/null">
            <arg value="--report=checkstyle" />
            <arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
            <arg value="--extensions=php,inc" />
            <arg value="--standard=PSR2" />
            <arg value="--ignore=${basedir}/src/tests" />
            <arg path="${basedir}/src" />
        </exec>
    </target>
    
    <target name="phpcpd" description="Find duplicate code using PHPCPD">
        <exec executable="phpcpd">
            <arg value="--log-pmd" />
            <arg value="${basedir}/build/logs/pmd-cpd.xml" />
            <arg value="--exclude" />
            <arg value="${basedir}/src/tests" />
            <arg path="${basedir}/src" />
        </exec>
    </target>
    
    <target name="phpdox" description="Generate API documentation using phpDox">
        <exec executable="phpdox">
            <arg value="-f" />
            <arg value="phpdox.xml" />
        </exec>
    </target>
    
    <target name="phpunit" description="Run unit tests with PHPUnit">
        <exec executable="phpunit">
            <arg value="--log-junit" />
            <arg path="${basedir}/build/logs/junit.xml" />
            <arg value="--coverage-clover" />
            <arg path="${basedir}/build/logs/clover.xml" />
            <arg value="-c" />
            <arg path="${basedir}/src/tests/phpunit.xml" />
            <arg value="${basedir}/src/tests" />
        </exec>
    </target>
    
    <target name="phpcb" description="Aggregate tool output with PHP_CodeBrowser">
        <exec executable="phpcb">
            <arg value="--log" />
            <arg path="${basedir}/build/logs" />
            <arg value="--source" />
            <arg path="${basedir}/src" />
            <arg value="--output" />
            <arg path="${basedir}/build/code-browser" />
        </exec>
    </target>
</project>